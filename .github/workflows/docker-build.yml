name: docker-build
on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main
    workflow_dispatch:

jobs:
    docker-build:
        runs-on: ubuntu-latest
        steps:
            - name: checkout for getting code in runner
              uses: actions/checkout@v4

            - name: setup docker buildx
              uses: docker/setup-buildx-action@v3

            - name: login to docker hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: build the image
              run: docker build -t ${{ secrets.DOCKER_USERNAME}}/secure-app:latest .

            - name: scan the image with trivy for vulnerabilities
              uses: aquasecurity/trivy-action@0.28.0
              with:
                image-ref: '${{ secrets.DOCKER_USERNAME}}/secure-app:latest'
                format: 'table'
                severity: 'CRITICAL,HIGH'
                exit-code: 1

            - name: scan the image with synk
              uses: snyk/actions/docker@master
              with:
                image: '${{ secrets.DOCKER_USERNAME}}/secure-app:latest'
              env:
                SNYK_TOKEN: ${{ secrets.SNYK_TOKEN}}

            - name: only push the image to dockerhub if no vulnerabilities are found
              if: success()
              run: |
                  docker push ${{ secrets.DOCKER_USERNAME }}/secure-app:latest
    docker-deploy:
        runs-on: ubuntu-latest
        needs: docker-build
        steps:
            - name: checkout for getting code in runner
              uses: actions/checkout@v4

            - name: ssh to the instance
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.EC2_HOST }}
                  username: ${{ secrets.EC2_USERNAME}}
                  key: ${{ secrets.EC2_KEY}}
                  script: |
                    docker stop secure-app || true
                    docker rm secure-app || true
                    docker pull ${{ secrets.DOCKER_USERNAME}}/secure-app:latest
                    docker run -d -p 5000:5000 --name secure-app ${{secrets.docker_username}}/secure-app:latest         
